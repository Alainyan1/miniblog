// Copyright 2024 alainyan <alainyan@yahoo.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/Alainyan1/miniblog.

syntax = "proto3"; // 首个非空非注释行必须注明使用的Protobuf的版本

package v1; // package关键字用于指定生成的 .pb.go 文件所属的包名
// apiserver.proto是一个Protobuf定义文件, 定义了一个Miniblog服务器

// 导入其他文件
// 提供用于定义http映射的功能, 通过option(google.api.http)实现grpc到http的映射
import "google/api/annotations.proto";
// 提供了一个标准的空消息类型google.protobuf.Empty, 适用于rpc方法不需要输出或输出消息的场景
import "google/protobuf/empty.proto";  //导入空消息
// 定义当前服务所依赖的健康检查消息
import "apiserver/v1/healthz.proto"; // 健康检查消息定义
// 当前服务所依赖的博客消息
// import "apiserver/v1/post.proto";
// // 当前服务所依赖的用户消息
// import "apiserver/v1/user.proto";
// // 为生成OpenAPI文档提供相关注释(如标题, 版本, 作者, 许可证信息等)
import "protoc-gen-openapiv2/options/annotations.proto";

// 对.proto文件进行配置, go_package是必须的配置项, 其值必须设定为包的导入路径
// 指定协议缓冲区文件生成的go代码所在包的路径
// 包路径为miniblog/pkg/api/apiserver/v1, 别名v1
option go_package = "miniblog/pkg/api/apiserver/v1;v1";

// OpenAPI 全局配置, 提供详细配置信息, 用于生成OpenAPI文档
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        // API 名称
        title: "miniblog API";
        // API 版本
        version: "1.0";
        // API 描述
        description: "";
        // 开发者联系方式
        contact: {
            name: "mini blog framework"
            url: "https://github/Alainyan1/miniblog";
            email: "alain.yan@yahoo.com"
        };
        // 许可证信息
        license: {
            name: "MIT License";
            url: "https://github.com/Alainyan1/miniblog/blob/main/LICENSE"
        };
    };
    // 指定访问协议为https
    schemes: HTTPS;
    // 服务请求和响应的格式
    consumes: "application/json";
    produces: "application/json";
};

// 定义了一个MiniBlog RPC 服务
// service关键字用来定义一个Miniblog服务, 服务包含了所有的RPC接口
service MiniBlog {
    // 健康检查, 包含请求参数google.protobuf.Empty和返回值HealthzResponse
    // 使用rpc关键字来定义服务的api接口
    rpc Healthz(google.protobuf.Empty) returns (HealthzResponse) {
        // 通过google.api.http注释, 指定http方法为get, url路径为/healthz
        option (google.api.http) = {
            get: "/healthz",
        };

        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // 在OpenAPI文档中的接口简要描述
            summary: "服务健康检查";
            // 标识该操作的唯一id
            operation_id: "Healthz";
            // 归类为服务治理
            tags: "服务治理";
        };
    }

    // rpc Login(LoginRequest) returns (LoginResponse) {
    //     option (google.api.http) = {
    //         post: "/login",
    //         body: "*",
    //     };

    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //         summary: "用户登录";
    //         operation_id: "Login";
    //         description: "";
    //         tags: "用户管理";
    //     };
    // }

    // // RefreshToken 刷新令牌
    // rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
    //     option (google.api.http) = {
    //       put: "/refresh-token",
    //       body: "*",
    //     };

    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //         summary: "刷新令牌";
    //         operation_id: "RefreshToken";
    //         description: "";
    //         tags: "用户管理";
    //     };
    // }

    // // 修改密码
    // rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse) {
    //     option (google.api.http) = {
    //         put: "/v1/users/{userID}/change-password",
    //         body: "*",
    //     };

    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //         summary: "修改密码";
    //         operation_id: "ChangePassword";
    //         tags: "用户管理";
    //     };
    // }

    // // CreateUser 创建用户
    // rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    //     option (google.api.http) = {
    //         post: "/v1/users",
    //         body: "*",
    //     };

    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //         summary: "创建用户";
    //         operation_id: "CreateUser";
    //         tags: "用户管理";
    //     };
    // }

    // // UpdateUser 更新用户信息
    // rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    //     option (google.api.http) = {
    //         put: "/v1/users/{userID}",
    //         body: "*",
    //     };

    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //         summary: "更新用户信息";
    //         operation_id: "UpdateUser";
    //         tags: "用户管理";
    //     };
    // }

    // // DeleteUser 删除用户
    // rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    //     option (google.api.http) = {
    //         delete: "/v1/users/{userID}",
    //     };

    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //         summary: "删除用户";
    //         operation_id: "DeleteUser";
    //         tags: "用户管理";
    //     };
    // }

    // // GetUser 获取用户信息
    // rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    //     option (google.api.http) = {
    //         get: "/v1/users/{userID}",
    //     };

    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //         summary: "获取用户信息";
    //         operation_id: "GetUser";
    //         tags: "用户管理";
    //     };
    // }

    // // ListUser 列出所有用户
    // rpc ListUser(ListUserRequest) returns (ListUserResponse) {
    //     option (google.api.http) = {
    //         get: "/v1/users",
    //     };

    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //         summary: "列出所有用户";
    //         operation_id: "ListUser";
    //         tags: "用户管理";
    //     };
    // }

    // // CreatePost 创建文章
    // rpc CreatePost(CreatePostRequest) returns (CreatePostResponse) {
    //     option (google.api.http) = {
    //         post: "/v1/posts",
    //         body: "*",
    //     };

    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //         summary: "创建文章";
    //         operation_id: "CreatePost";
    //         tags: "博客管理";
    //     };
    // }

    // // updatePost 更新文章
    // rpc UpdatePost(UpdatePostRequest) returns (UpdatePostResponse) {
    //     // 将UpdatePost映射为http put请求, 并通过URL /v1/posts/{postID}访问
    //     // {postID}是一个路径参数, grpc-gateway会根据postID名称, 将其解析并映射到UpdatePost Request类型中相应的字段
    //     // body: "*" 表示请求体中的所有字段都会映射到UpdatePostRequest类型
    //     option (google.api.http) = {
    //         put: "v1/posts/{postID}",
    //         body: "*",
    //     };

    //     // 用于生成OpenAPI文档的注解
    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //         // 在文档中简要描述操作的功能
    //         summary: "更新文章";
    //         // 为操作指定唯一标识符, 便于跟踪
    //         operation_id: "UpdatePost";
    //         // 将此操作归类到"博客管理"标签组, 方便在OpenAPI文档中组织接口分组
    //         tags: "博客管理";
    //     };
    // }

    // // DeletePost 删除文章
    // rpc DeletePost(DeletePostRequest) returns (DeletePostResponse) {
    //     option (google.api.http) = {
    //         delete: "/v1/posts",
    //         body: "*",
    //     };

    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //         summary: "删除文章";
    //         operation_id: "DeletePost";
    //         tags: "博客管理";
    //     };
    // }

    // // GetPost 获取文章信息
    // rpc GetPost(GetPostRequest) returns (GetPostResponse) {
    //     option (google.api.http) = {
    //         get: "/v1/posts/{postID}",
    //     };

    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //         summary: "获取文章信息";
    //         operation_id: "GetPost";
    //         tags: "博客管理";
    //     };
    // }

    // // ListPost 列出所有文章
    // rpc ListPost(ListPostRequest) returns (ListPostResponse) {
    //     option (google.api.http) = {
    //         get: "/v1/posts",
    //     };

    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //         summary: "列出所有文章";
    //         operation_id: "ListPost";
    //         tags: "博客管理";
    //     };
    // }
}

